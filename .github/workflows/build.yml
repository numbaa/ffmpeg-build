name: Build
on: workflow_dispatch
jobs:
  Windows:
    permissions:
      contents: write
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ffmpeg-build
      - name: Checkout ffmpeg
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          ref: n5.1.3
          path: ffmpeg
      - name: Init MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Setup MYSYS2
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          msystem: UCRT64
          install: >-
            make
            yasm
      - name: Build ffmpeg
        shell: msys2 {0}
        run: |
          cd ffmpeg
          chmod +x ./configure
          ./configure --prefix=./install --enable-shared --disable-debug --disable-protocols --enable-asm --enable-x86asm --target-os=win64 --arch=x86_64 --toolchain=msvc --disable-gpl --disable-programs --disable-doc --disable-avdevice --disable-swscale --disable-postproc --disable-avfilter --disable-filters --disable-devices --disable-demuxers --disable-muxers --disable-avformat
          make -j2
          make install
      - name: Generate zip
        run: |
          echo ${{ github.sha }} > Release.txt
          Compress-Archive -Path ./ffmpeg/install/*,./Release.txt,./ffmpeg-build/CMakeLists.txt -DestinationPath ffmpeg.win.${{ github.ref_name }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ffmpeg.win.${{ github.ref_name }}.zip

  Linux:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ffmpeg-build
      - name: Checkout ffmpeg
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          ref: n5.1.3
          path: ffmpeg
      - name: Checkout AMF
        uses: actions/checkout@v4
        with:
          repository: GPUOpen-LibrariesAndSDKs/AMF
          ref: v1.4.30
          path: amf          
      - name: Install deps
        run: |
          sudo apt-get clean
          sudo apt-get update
          sudo apt-get -y install gcc-10 g++-10 yasm libmfx-dev libva-dev libvdpau-dev
      - name: Build
        run: |
          alias gcc='gcc-10'
          alias g++='g++-10'
          export CC=`which gcc-10`
          export CXX=`which g++-10`
          mkdir -p xinclude/AMF
          cp -r ./amf/amf/public/include/* ./xinclude/AMF
          export CPATH=${{ github.workspace }}/xinclude
          export C_INCLUDE_PATH=${{ github.workspace }}/xinclude
          export CPLUS_INCLUDE_PATH=${{ github.workspace }}/xinclude
          cd ffmpeg
          ./configure --prefix=./install --enable-shared --enable-amf --enable-libmfx --enable-vdpau --enable-vaapi --disable-debug --disable-protocols --enable-asm --enable-x86asm --target-os=linux --arch=x86_64 --disable-gpl --disable-programs --disable-doc --disable-avdevice --disable-swscale --disable-postproc --disable-avfilter --disable-filters --disable-devices --disable-demuxers --disable-muxers --disable-avformat --cc=gcc-10 --cxx=g++-10
          make -j2
          make install
      - name: Generate tar
        run: |
          echo ${{ github.sha }} > Release.txt
          cp Release.txt ./ffmpeg/install
          cp ffmpeg-build/CMakeLists.txt ./ffmpeg/install
          tar -czvf ffmpeg.linux.${{ github.ref_name }}.tar.gz -C ./ffmpeg/install .
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ffmpeg.linux.${{ github.ref_name }}.tar.gz

      